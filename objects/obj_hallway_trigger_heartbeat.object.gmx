<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_talker</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_trigger_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
story_index = 28;
spooky_index = 25;
snd_index = 2;
snd_gain = 0.5;
snd_volume = 0;

if (global.storyline_array[spooky_index] != 1)
{
    instance_destroy();
}
else if (global.storyline_array[story_index] == 1)
{
    if (audio_is_playing(snd_index))
        audio_sound_gain(snd_index, 0, 1000);
    else
        instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_gain(snd_index, 0, 1000);
global.player_speed_cur = global.player_speed_nrm;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.storyline_array[story_index] == 0)
    scr_sound_play(snd_index, 0, random_range(0.95, 1), 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clamp_left = bbox_left;
clamp_right = bbox_right;
clamp_range = clamp_right - clamp_left;
player_position = obj_player_parent.collide_left_x;

if (alarm[0] == -1)
{
    var snd_frequency = ((player_position - clamp_left) / clamp_range) * 50;
    snd_frequency = clamp(snd_frequency, 30, 50);
    alarm[0] = snd_frequency;
}

if (audio_is_playing(snd_index))
{
    var snd_volume = (clamp_right - player_position) / clamp_range;
    snd_volume = clamp(snd_volume, 0.1, 0.3);
    audio_sound_gain(snd_index, snd_volume, 0);
    var snd_pitch = ((player_position - clamp_left) / clamp_range) * 2;
    snd_pitch = clamp(snd_pitch, 1, 1.5);
    audio_sound_pitch(snd_index, snd_pitch);
}

if (instance_exists(obj_player_parent))
{
    if (collision_rectangle(obj_player_parent.collide_left_x, obj_player_parent.collide_top_y, obj_player_parent.collide_right_x, obj_player_parent.collide_bottom_y, id, 1, 0))
    {
        var speed_change = ((player_position - clamp_left) / clamp_range) * global.player_speed_nrm;
        speed_change = clamp(speed_change, 0.3, global.player_speed_nrm);
        global.player_speed_cur = speed_change;
    }
}

if (global.storyline_array[story_index] == 1)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints />
</object>
