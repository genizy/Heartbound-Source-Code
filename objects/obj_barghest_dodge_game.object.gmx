<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_combat_controls_leftright</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6005</depth>
  <persistent>0</persistent>
  <parentName>obj_game_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dodge_position = 2;
attack_number = 3 + obj_combat_parent.selected_diff + global.storyline_array[107];
attack_number = clamp(attack_number, 3, 8);
attack_total = 0;
damage_taken = 0;
cur_target[1] = 0;
cur_target[2] = 0;
image_speed = 0.1;

if (global.gamepad_connected == 1)
    sprite_index = spr_combat_controls_gamepad_leftright;

time_modifier = (obj_combat_parent.selected_diff * 0.1) + (global.storyline_array[107] * 0.1);
attack_charge_delay = room_speed * (1.25 * (1 - time_modifier));
attack_charge_delay = clamp(attack_charge_delay, room_speed * 0.7, room_speed * 1.25);
attack_reset_delay = room_speed * (0.5 * (1 - time_modifier));
attack_reset_delay = clamp(attack_reset_delay, room_speed * 0.3, room_speed * 0.5);

if (obj_combat_parent.selected_diff &gt; 1)
{
    display_text = 0;
    alarm[4] = 1;
}
else
{
    display_text = 1;
    alarm[3] = room_speed / (obj_combat_parent.selected_diff + 1);
}

instance_create(246, obj_view.y + 116, obj_barghest_dodge_lore_1);
instance_create(320, obj_view.y + 117, obj_barghest_dodge_lore_2);
instance_create(393, obj_view.y + 116, obj_barghest_dodge_lore_3);

if (instance_exists(obj_lore_combat))
{
    with (obj_lore_combat)
        image_alpha = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_barghest_dodge_charge);
audio_stop_sound(snd_barghest_dodge_blast);
audio_stop_sound(snd_barghest_dodge_slash);

with (obj_barghest_combat_parent)
{
    image_speed = 0.15;
    enemy_attacking = 0;
    sprite_index = asset_get_index("spr_barghest_enemy_" + string(enemy_section));
}

if (instance_exists(obj_barghest_dodge_lore_parent))
{
    with (obj_barghest_dodge_lore_parent)
        instance_destroy();
}

if (instance_exists(obj_lore_combat))
{
    with (obj_lore_combat)
        image_alpha = 1;
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" ename="obj_gizmo_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cur_target[1] = dodge_position;
cur_target[2] = irandom_range(1, 3);

while (cur_target[1] == cur_target[2])
    cur_target[2] = irandom_range(1, 3);

scr_sound_play(165, 0.2, random_range(0.95, 1), 1);

with (obj_barghest_combat_parent)
{
    for (xx = 1; xx &lt;= 2; xx++)
    {
        if (obj_barghest_dodge_game.cur_target[xx] == enemy_section)
        {
            enemy_attacking = 1;
            sprite_index = asset_get_index("spr_barghest_enemy_" + string(enemy_section) + "_charge");
            image_speed = 0.3;
        }
    }
}

alarm[0] = attack_charge_delay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_barghest_dodge_blast);
audio_stop_sound(snd_barghest_dodge_slash);

if (damage_taken == 0)
{
    with (obj_barghest_dodge_lore_parent)
    {
        if (obj_barghest_dodge_game.dodge_position == draw_position)
        {
            switch (global.storyline_array[23])
            {
                case 0:
                    global.enemy_hp_check -= 1;
                    break;
                
                case 1:
                    global.enemy_hp_check -= 2;
                    break;
            }
            
            instance_create(x, y, obj_barghest_dodge_weapon);
        }
    }
}

with (obj_barghest_combat_parent)
{
    image_speed = 0.2;
    enemy_attacking = 0;
    sprite_index = asset_get_index("spr_barghest_enemy_" + string(enemy_section));
}

if (instance_exists(obj_barghest_dodge_lore_parent))
{
    with (obj_barghest_dodge_lore_parent)
        instance_destroy();
}

obj_combat_parent.activate_game = 1;

if (instance_exists(obj_lore_combat))
{
    with (obj_lore_combat)
        image_alpha = 1;
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_barghest_dodge_blast);
audio_stop_sound(snd_barghest_dodge_slash);

with (obj_barghest_combat_parent)
{
    image_speed = 0.15;
    enemy_attacking = 0;
    sprite_index = asset_get_index("spr_barghest_enemy_" + string(enemy_section));
}

if (damage_taken == 0)
{
    with (obj_barghest_dodge_lore_parent)
    {
        if (obj_barghest_dodge_game.dodge_position == draw_position)
        {
            switch (global.storyline_array[23])
            {
                case 0:
                    global.enemy_hp_check -= 1;
                    break;
                
                case 1:
                    global.enemy_hp_check -= 2;
                    break;
            }
            
            instance_create(x, y, obj_barghest_dodge_weapon);
        }
    }
}

damage_taken = 0;
alarm[4] = 1;
cur_target[1] = 0;
cur_target[2] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attack_total += 1;
audio_stop_sound(snd_barghest_dodge_charge);

for (xx = 1; xx &lt;= 2; xx++)
{
    if (cur_target[xx] == 1 || cur_target[xx] == 3)
        scr_sound_play(167, 0.1, random_range(0.95, 1.05), 0);
    else
        scr_sound_play(166, 0.3, random_range(0.95, 1), 0);
}

with (obj_barghest_combat_parent)
{
    for (xx = 1; xx &lt;= 2; xx++)
    {
        if (obj_barghest_dodge_game.cur_target[xx] == enemy_section)
        {
            enemy_attacking = 1;
            sprite_index = asset_get_index("spr_barghest_enemy_" + string(enemy_section) + "_attack");
            image_speed = 0.3;
        }
    }
}

if (attack_total &lt; attack_number)
    alarm[1] = attack_reset_delay;
else
    alarm[2] = room_speed * 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_barghest_dodge_lore_parent)
{
    if (obj_barghest_dodge_game.dodge_position == draw_position)
    {
        if (place_meeting(round(x), round(y), obj_barghest_combat_parent))
        {
            if (obj_barghest_dodge_game.damage_taken == 0)
            {
                if (obj_barghest_dodge_game.dodge_position == 2)
                    scr_screenshake(4, 0.5, 0, obj_combat_parent.camera_x, obj_combat_parent.camera_y);
                else
                    scr_screenshake(4, 0.5, 2, obj_combat_parent.camera_x, obj_combat_parent.camera_y);
                
                scr_damage_target(1, 22, x, y);
                obj_barghest_dodge_game.damage_taken = 1;
            }
        }
    }
}

if (damage_taken == 0)
{
    if (global.left_key_pressed)
    {
        dodge_position -= 1;
        
        if (dodge_position &lt; 1)
            dodge_position = 1;
    }
    else if (global.right_key_pressed)
    {
        dodge_position += 1;
        
        if (dodge_position &gt; 3)
            dodge_position = 3;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (display_text == 1)
{
    draw_sprite_ext(sprite_index, image_index, 320, obj_view.y + 40, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    
    if (alarm[3] &lt; 1)
    {
        image_alpha -= ((0.04 * obj_combat_parent.selected_diff) + 0.04);
        
        if (image_alpha &lt;= 0)
        {
            display_text = 0;
            alarm[4] = 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints />
</object>
