<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_frostdoors_gate1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>50</depth>
  <persistent>0</persistent>
  <parentName>obj_detail_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
x_target = x - 60;
x_start = x;
total_dis = point_distance(x_start, y, x_target, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(obj_fade))
{
    with (instance_create(x, y, obj_fade))
    {
        next_room = 9;
        next_color = 0;
        fadein_timer = 0.01;
        fadeout_timer = 0.05;
        fadepause_timer = 0.01;
        fadeout_amount = 0.01;
        fadein_amount = 0.01;
        fade_out = 1;
        alarm[1] = room_speed * fadeout_timer;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_screenshake(1, 2, 1, view_xview, view_yview);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x &lt; x_start)
{
    x += 0.75;
    alarm[1] = 1;
    var target_dis = point_distance(x, y, x_target, y);
    var start_dis = point_distance(x, y, x_start, y);
    var target_mod = target_dis / total_dis;
    var start_mod = start_dis / total_dis;
    audio_sound_gain(snd_music_niflheim_throne, 0.6 * start_mod, 0);
    
    if (!audio_is_playing(snd_factory_slide))
        scr_sound_play(113, 0.2, 1, 1);
}
else
{
    audio_stop_sound(snd_music_niflheim_throne);
    audio_stop_sound(snd_factory_slide);
    scr_sound_play(110, 0.4, 1, 0);
    scr_screenshake(6, 0.5, 1, view_xview, view_yview);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x &gt; x_target)
{
    x -= 0.15;
    alarm[0] = 1;
    
    if (!audio_is_playing(snd_music_niflheim_throne))
        scr_sound_play(164, 0, 1, 1);
    
    if (!audio_is_playing(snd_factory_slide))
        scr_sound_play(113, 0.2, 0.8, 1);
    
    var target_dis = point_distance(x, y, x_target, y);
    var start_dis = point_distance(x, y, x_start, y);
    var target_mod = target_dis / total_dis;
    var start_mod = start_dis / total_dis;
    audio_sound_gain(snd_outsidewind, 0.1 * target_mod, 0);
    audio_sound_gain(snd_factory_frost, 0.3 * target_mod, 0);
    audio_sound_gain(snd_music_niflheim_throne, 0.6 * start_mod, 0);
}
else
{
    audio_stop_sound(snd_outsidewind);
    audio_stop_sound(snd_factory_frost);
    
    if (instance_exists(obj_frostdoors_lore_gates))
    {
        with (obj_frostdoors_lore_gates)
            alarm[1] = room_speed;
    }
    
    alarm[1] = room_speed * 3.5;
    alarm[2] = room_speed * 3.5;
    alarm[3] = room_speed * 3.5;
    
    if (instance_exists(obj_frostdoors_gate_2))
    {
        with (obj_frostdoors_gate_2)
            alarm[1] = room_speed * 3.5;
    }
    
    if (instance_exists(obj_frostdoors_shadow))
    {
        with (obj_frostdoors_shadow)
            alarm[1] = room_speed * 3.5;
    }
    
    if (instance_exists(obj_frostdoors_shadow_edge))
    {
        with (obj_frostdoors_shadow_edge)
            alarm[1] = room_speed * 3.5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_view))
{
    with (obj_view)
        follow_player = 1;
}

global.player_direction = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints />
</object>
