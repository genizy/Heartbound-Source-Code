<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_save_stump</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_investigate_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
text_location = 5;
talk_distance = 10;
cur_message = 4000;
question_true = 0;
question_asked = 0;
question_answered = 0;
sprite_base = sprite_index;
sprite_index = spr_save_book_closed;
mask_index = sprite_base;
image_speed = 0.15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (talking_state == 0)
{
    scr_talk();
}
else
{
    if (sprite_index == spr_save_book_closed)
    {
        scr_sound_play(26, 0.2, 1, 0);
        sprite_index = spr_save_book_opening;
        image_index = 0;
    }
    
    if (question_true == 1 &amp;&amp; question_asked == 0)
    {
        question_asked = 1;
        
        switch (next_step)
        {
            case 2:
                activate_dialog_options(2, 3);
                break;
            
            case 6:
                activate_dialog_options(6, 7);
                break;
        }
    }
    
    if (global.current_talker == object_index)
    {
        if (options_state == 0)
        {
            if ((global.accept_key &amp;&amp; global.text_complete == 1) || question_answered == 1)
            {
                question_answered = 0;
                global.text_complete = 0;
                
                switch (next_step)
                {
                    case 1:
                        next_step = 2;
                        cur_message = 4001;
                        question_true = 1;
                        activate_dialog();
                        break;
                    
                    case 2:
                        cur_message = 4000;
                        question_true = 0;
                        question_asked = 0;
                        question_answered = 0;
                        sprite_index = spr_save_book_closed;
                        end_dialog();
                        break;
                    
                    case 3:
                        save_location(room, x, y + 5);
                        save_game();
                        audio_store[1] = audio_sound_get_gain(snd_rain);
                        audio_store[2] = audio_sound_get_gain(snd_insidewind);
                        audio_store[3] = audio_sound_get_gain(snd_outsidewind);
                        audio_store[4] = audio_sound_get_gain(snd_stormrain);
                        audio_store[5] = audio_sound_get_gain(snd_music_shadows_sonata);
                        audio_sound_gain(snd_rain, 0, 0);
                        audio_sound_gain(snd_insidewind, 0, 0);
                        audio_sound_gain(snd_outsidewind, 0, 0);
                        audio_sound_gain(snd_stormrain, 0, 0);
                        audio_sound_gain(snd_music_shadows_sonata, audio_store[5] * 0.5, 0);
                        scr_sound_play(27, 0.3, 1, 0);
                        audio_sound_gain(snd_rain, audio_store[1], 500);
                        audio_sound_gain(snd_insidewind, audio_store[2], 500);
                        audio_sound_gain(snd_outsidewind, audio_store[3], 500);
                        audio_sound_gain(snd_stormrain, audio_store[4], 500);
                        audio_sound_gain(snd_music_shadows_sonata, audio_store[5], 500);
                        next_step = 4;
                        cur_message = 4002;
                        question_true = 0;
                        question_asked = 0;
                        question_answered = 0;
                        activate_dialog();
                        break;
                    
                    case 4:
                        next_step = 5;
                        cur_message = 4003;
                        activate_dialog();
                        break;
                    
                    case 5:
                        next_step = 6;
                        cur_message = 4004;
                        question_true = 1;
                        activate_dialog();
                        break;
                    
                    case 6:
                        cur_message = 4000;
                        question_true = 0;
                        question_asked = 0;
                        question_answered = 0;
                        sprite_index = spr_save_book_closed;
                        end_dialog();
                        break;
                    
                    case 7:
                        question_true = 0;
                        question_asked = 0;
                        question_answered = 0;
                        instance_create(x, y, obj_save_fade);
                        end_dialog();
                        break;
                }
            }
        }
        else if (global.text_complete == 1)
        {
            global.text_complete = 0;
        }
    }
}

if (y &lt;= (view_yview + (view_hview / 2)))
    text_location = 0;
else
    text_location = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == spr_save_book_opening)
    sprite_index = spr_save_book_open;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_base, image_index, round(x), round(y), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
draw_sprite_ext(sprite_index, image_index, round(x), round(y) - 27, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints />
</object>
