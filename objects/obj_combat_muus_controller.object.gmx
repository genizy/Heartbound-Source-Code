<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_combat_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.current_menu = 0;
global.combat_active = 1;
global.enemy_hp_cur = 200;
global.enemy_hp_max = 200;
global.enemy_hp_check = global.enemy_hp_max;
global.player_hp_cur = global.player_hp_max;
death_trigger = 0;
combat_round = 0;
activate_game = 0;
last_game = 0;
selected_game = 0;
game_array[0, 0] = 48;
game_array[1, 0] = 54;
game_array[2, 0] = 57;
game_array[3, 0] = 67;
game_array[4, 0] = 70;
game_array[0, 1] = 0;
game_array[1, 1] = 0;
game_array[2, 1] = 0;
game_array[3, 1] = 0;
game_array[4, 1] = 0;
total_games = array_height_2d(game_array) - 1;
game_increment = 0;
game_list = ds_list_create();

for (xx = 0; xx &lt;= total_games; xx++)
    ds_list_add(game_list, xx);

ds_list_shuffle(game_list);
text_skip = 1;
text_fade = 0;
text_move = 0;
text_fly = 0;
text_timer = 0;
text_border = 1;
text_flipped = 1;
text_location = 0;
talk_distance = 0;
talking_state = 0;
options_state = 0;
dialog_active = 0;
cur_message = 1;
next_step = 1;
step_1 = 0;
step_2 = 0;
mess_1 = 0;
mess_2 = 0;
camera_x = view_xview;
camera_y = view_yview;
dialog_step = 0;
music_layer[0] = 128;
music_layer[1] = 129;
scr_sound_play(music_layer[0], 0.25, 1, 0);
alarm[4] = room_speed * audio_sound_length(music_layer[0]);
alarm[2] = room_speed * 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" ename="obj_gizmo_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_sound_play(music_layer[1], 0, 1, 1);
audio_sound_gain(music_layer[1], 0.25, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activate_dialog();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activate_game = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, selected_game);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.combat_active == 1)
{
    if (!instance_exists(obj_barghest2_arena))
    {
        instance_create(obj_view.x, obj_view.y, obj_barghest2_arena);
        instance_create(obj_view.x, obj_view.y, obj_barghest_arena_back);
        instance_create(76, obj_view.y + 220, obj_combat_healthbar_lore);
        instance_create(564, obj_view.y + 220, obj_combat_healthbar_barghest);
    }
}

if (!instance_exists(obj_damage_bit))
{
    if (global.player_hp_cur &lt;= 0)
    {
        if (death_trigger == 0)
        {
            death_trigger = 1;
            scr_sound_play(185, 0.4, 1, 0);
            audio_sound_gain(music_layer[0], 0, 500);
            audio_sound_gain(music_layer[1], 0, 500);
            
            if (instance_exists(obj_game_parent))
                obj_game_parent.alarm[11] = 1;
            
            save_location(32, 320, 660);
            global.storyline_array[66] = 1;
            global.storyline_array[67] = 1;
            global.storyline_array[68] = 1;
            global.storyline_array[69] = 1;
            global.storyline_array[72] = 0;
            
            switch (global.storyline_array[1])
            {
                case 2:
                    scr_clothing_change(0);
                    break;
                
                case 3:
                    scr_clothing_change(1);
                    break;
            }
            
            save_game();
            
            if (!instance_exists(obj_fade_death))
                instance_create(x, y, obj_fade_death);
        }
    }
    else if (activate_game == 1)
    {
        activate_game = 0;
        game_index = ds_list_find_value(game_list, game_increment);
        selected_game = game_array[game_index, 0];
        selected_diff = game_array[game_index, 1];
        game_array[game_index, 1] += 1;
        last_game = game_index;
        combat_round += 1;
        game_increment++;
        
        if (game_increment &gt; total_games)
        {
            game_increment = 0;
            ds_list_shuffle(game_list);
            
            while (ds_list_find_value(game_list, game_increment) == last_game)
                ds_list_shuffle(game_list);
        }
        
        switch (dialog_step)
        {
            case 0:
                if (global.enemy_hp_check &lt;= (global.enemy_hp_max * 0.75))
                {
                    dialog_step = 1;
                    dialog_active = 1;
                    cur_message = 14;
                    text_location = 3;
                    text_flipped = 1;
                    alarm[3] = room_speed;
                    exit;
                }
                
                break;
            
            case 1:
                if (global.enemy_hp_check &lt;= (global.enemy_hp_max * 0.5))
                {
                    dialog_step = 2;
                    dialog_active = 1;
                    cur_message = 16;
                    text_location = 3;
                    text_flipped = 1;
                    alarm[3] = room_speed;
                    exit;
                }
                
                break;
            
            case 2:
                if (global.enemy_hp_check &lt;= (global.enemy_hp_max * 0.25))
                {
                    dialog_step = 3;
                    dialog_active = 1;
                    cur_message = 18;
                    text_location = 3;
                    text_flipped = 1;
                    alarm[3] = room_speed;
                    exit;
                }
                
                break;
            
            case 3:
                if (global.enemy_hp_check &lt;= 0)
                {
                    dialog_step = 4;
                    dialog_active = 1;
                    cur_message = 20;
                    text_location = 3;
                    text_flipped = 1;
                    alarm[3] = room_speed;
                    exit;
                }
                
                break;
        }
        
        alarm[1] = room_speed;
    }
}

if (talking_state == 0)
{
    scr_talk();
}
else if (global.current_talker == object_index)
{
    if (options_state == 0)
    {
        if (global.accept_key &amp;&amp; global.text_complete == 1)
        {
            global.text_complete = 0;
            
            switch (dialog_step)
            {
                case 1:
                    switch (next_step)
                    {
                        case 1:
                            next_step = 2;
                            cur_message = 15;
                            text_flipped = 0;
                            text_location = 4;
                            activate_dialog();
                            break;
                        
                        case 2:
                            alarm[1] = room_speed;
                            dialog_active = 0;
                            end_dialog();
                            break;
                    }
                    
                    break;
                
                case 2:
                    switch (next_step)
                    {
                        case 1:
                            next_step = 2;
                            cur_message = 17;
                            text_flipped = 0;
                            text_location = 4;
                            activate_dialog();
                            break;
                        
                        case 2:
                            alarm[1] = room_speed;
                            dialog_active = 0;
                            end_dialog();
                            break;
                    }
                    
                    break;
                
                case 3:
                    switch (next_step)
                    {
                        case 1:
                            next_step = 2;
                            cur_message = 19;
                            text_flipped = 0;
                            text_location = 4;
                            activate_dialog();
                            break;
                        
                        case 2:
                            alarm[1] = room_speed;
                            dialog_active = 0;
                            end_dialog();
                            break;
                    }
                    
                    break;
                
                case 4:
                    switch (next_step)
                    {
                        case 1:
                            next_step = 2;
                            cur_message = 21;
                            text_flipped = 0;
                            text_location = 4;
                            activate_dialog();
                            break;
                        
                        case 2:
                            next_step = 3;
                            cur_message = 22;
                            text_flipped = 1;
                            text_location = 3;
                            activate_dialog();
                            break;
                        
                        case 3:
                            selected_game = 73;
                            alarm[1] = room_speed;
                            dialog_active = 0;
                            end_dialog();
                            break;
                    }
                    
                    break;
            }
        }
    }
    else if (global.text_complete == 1)
    {
        global.text_complete = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.combat_active = 0;

with (obj_barghest2_arena)
    instance_destroy();

with (obj_barghest_arena_back)
    instance_destroy();

with (obj_combat_healthbar_lore)
    instance_destroy();

with (obj_combat_healthbar_barghest)
    instance_destroy();

with (obj_barghest_arena_particles)
    instance_destroy();

with (obj_lore_combat)
    instance_destroy();

audio_stop_sound(music_layer[0]);
audio_stop_sound(music_layer[1]);
audio_stop_sound(snd_barghest_dodge_blast);
ds_list_destroy(game_list);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints />
</object>
