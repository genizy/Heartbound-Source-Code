<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_effects</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_music_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>music_new[0] = 145;
music_new[1] = 120;
music_newvol[0] = 0.3;
music_newvol[1] = 0.1;
music_old[0] = 141;
music_oldvol[0] = 0.3;

switch (global.storyline_array[91])
{
    case 0:
        music_old[0] = 143;
        break;
    
    case 1:
        music_old[0] = 141;
        break;
    
    case 2:
        music_old[0] = 144;
        break;
    
    case 3:
        music_old[0] = 142;
        break;
}

new_music = array_length_1d(music_new) - 1;
old_music = array_length_1d(music_old) - 1;

if (instance_exists(obj_player_parent))
{
    music_x = obj_player_parent.x;
    music_y = obj_player_parent.y;
    music_w = room_width;
    music_min = music_w * 0.25;
    music_max = music_w * 0.75;
}

var xx = 0;

for (xx = 0; xx &lt;= new_music; xx++)
{
    if (!audio_is_playing(music_new[xx]))
        scr_sound_play(music_new[xx], 0, 1, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_player_parent))
{
    music_x = obj_player_parent.x;
    music_y = obj_player_parent.y;
    
    if (music_x &gt;= music_min &amp;&amp; music_x &lt;= music_max)
    {
        var xx = 0;
        
        for (xx = 0; xx &lt;= old_music; xx++)
        {
            var new_vol = (point_distance(music_max, music_y, music_x, music_y) / music_max) * music_oldvol[xx];
            audio_sound_gain(music_old[xx], new_vol, 0);
        }
        
        xx = 0;
        
        for (xx = 0; xx &lt;= new_music; xx++)
        {
            var new_vol = (point_distance(music_min, music_y, music_x, music_y) / music_max) * music_newvol[xx];
            audio_sound_gain(music_new[xx], new_vol, 0);
        }
    }
    else if (music_x &lt; music_min)
    {
        var xx = 0;
        
        for (xx = 0; xx &lt;= old_music; xx++)
            audio_sound_gain(music_old[xx], music_oldvol[xx], 0);
        
        xx = 0;
        
        for (xx = 0; xx &lt;= new_music; xx++)
            audio_sound_gain(music_new[xx], 0, 0);
    }
    else if (music_x &gt; music_max)
    {
        var xx = 0;
        
        for (xx = 0; xx &lt;= old_music; xx++)
            audio_sound_gain(music_old[xx], 0, 0);
        
        xx = 0;
        
        for (xx = 0; xx &lt;= new_music; xx++)
            audio_sound_gain(music_new[xx], music_newvol[xx], 0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints />
</object>
