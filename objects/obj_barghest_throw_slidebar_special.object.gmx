<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_barghest_throw_slidebar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target_speed = 0.01;
target_value = 0.75;
target_location = sprite_height * target_value;
target_variance = 0.1;
target_min = 0.5 - target_variance;
target_max = 0.5 + target_variance;
target_pos = 0;
target_x_1 = x + 40;
target_x_2 = x - 60;
target_active = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (target_active == 1)
{
    target_value += target_speed;
    
    if (target_value &gt; 0.98)
    {
        target_value = 0.98;
        target_speed = -target_speed;
        scr_sound_play(171, 0.2, 1, 0);
    }
    else if (target_value &lt; 0.02)
    {
        target_value = 0.02;
        target_speed = -target_speed;
        scr_sound_play(171, 0.2, 1, 0);
    }
    
    if (global.accept_key)
    {
        target_active = 0;
        
        with (obj_game_parent)
        {
            alarm[4] = -1;
            alarm[5] = -1;
        }
        
        if (target_value &gt;= target_min &amp;&amp; target_value &lt;= target_max)
        {
            audio_store[1] = audio_sound_get_gain(snd_music_shadows_bitter);
            audio_sound_gain(snd_music_shadows_bitter, audio_store[1] * 0.5, 0);
            scr_sound_play(186, 0.4, 0.5, 0);
            audio_sound_gain(snd_music_shadows_bitter, audio_store[1], 250);
            
            with (obj_barghest_throw_stick_special)
            {
                sprite_index = sprite_throw;
                
                switch (obj_game_parent.weapon_type)
                {
                    case "stick":
                        image_speed = 0.35;
                        break;
                    
                    case "axe":
                        image_speed = 0.38;
                        break;
                }
                
                direction = 90;
                speed = 5;
                obj_barghest_throw_stick_special.alarm[0] = room_speed * 0.5;
            }
            
            global.storyline_array[71] = 2;
            global.storyline_array[107] += 1;
        }
        else
        {
            with (obj_game_parent)
                alarm[0] = 1;
            
            global.storyline_array[71] = 1;
        }
    }
}

switch (target_pos)
{
    case 0:
        if (x &lt; target_x_1)
        {
            x += 2;
        }
        else
        {
            target_pos = 2;
            x = target_x_1;
        }
        
        break;
    
    case 1:
        if (x &gt; target_x_2)
            x -= 2;
        else
            instance_destroy();
        
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, round(x), round(y), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
draw_set_alpha(0.25);
draw_rectangle_color(x - (sprite_width * 0.5), y - (sprite_height * target_variance), x + (sprite_width * 0.5), y + (sprite_height * target_variance), c_white, c_white, c_white, c_white, 0);
draw_set_alpha(1);
draw_rectangle_color(x - (sprite_width * 0.5), y - (sprite_height * target_variance) - 1, x + (sprite_width * 0.5), y - (sprite_height * target_variance), c_white, c_white, c_white, c_white, 0);
draw_rectangle_color(x - (sprite_width * 0.5), y + (sprite_height * target_variance), x + (sprite_width * 0.5), y + (sprite_height * target_variance) + 1, c_white, c_white, c_white, c_white, 0);
draw_sprite_ext(spr_barghest_throw_icon, image_index, x, (y + (sprite_height * 0.5)) - (sprite_height * target_value), 1, 1, image_angle, image_blend, image_alpha);
draw_sprite_ext(spr_barghest_throw_slidebar_border, image_index, round(x), round(y), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints />
</object>
