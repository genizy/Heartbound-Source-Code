<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_combat_controls_leftmouse</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6005</depth>
  <persistent>0</persistent>
  <parentName>obj_game_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pattern_current = 0;
pattern_steps = 3 + obj_combat_parent.selected_diff + global.storyline_array[107];
pattern_steps = clamp(pattern_steps, 3, 6);
pattern_array = 0;
game_started = 0;

for (xx = 0; xx &lt; pattern_steps; xx++)
    pattern_array[xx] = 0;

var last_value = 0;

for (xx = 0; xx &lt; pattern_steps; xx++)
{
    select_value = irandom_range(1, 4);
    
    while (select_value == last_value)
        select_value = irandom_range(1, 4);
    
    pattern_array[xx] = select_value;
    last_value = select_value;
}

image_speed = 0.1;

with (obj_barghest_combat_parent)
    color_target = 0;

if (global.gamepad_connected == 0)
{
    global.cursor_active = 1;
    
    if (global.storyline_array[23] == 1)
        global.cursor_model = 1154;
    else
        global.cursor_model = 1153;
}
else
{
    sprite_index = spr_combat_controls_gamepad_buttons;
}

pattern_start_delay = room_speed * 0.5;
pattern_reset_delay = room_speed * 0.6;

if (obj_combat_parent.selected_diff &gt; 1)
{
    display_text = 0;
    alarm[1] = pattern_start_delay;
}
else
{
    display_text = 1;
    alarm[0] = room_speed / (obj_combat_parent.selected_diff + 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_barghest_combat_parent)
    color_target = 16777215;

if (instance_exists(obj_barghest_pattern_attack))
{
    with (obj_barghest_pattern_attack)
    {
        audio_stop_sound(snd_barghest_pattern_blast);
        instance_destroy();
    }
}

with (obj_barghest_pattern_button_parent)
{
    position_set = 0;
    position_step = 2;
    target_position = y - 200;
    direction = 90;
    speed = 6;
}

with (obj_barghest_pattern_base)
{
    position_set = 0;
    position_step = 2;
    target_position = y - 200;
    direction = 90;
    speed = 6;
}

global.cursor_active = 0;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var time_total = room_speed * 10;
var time_pitch = time_total / alarm[4];
time_pitch = clamp(time_pitch, 0.5, 4.5);

if (alarm[4] != 0)
{
    scr_sound_play(171, 0.2, time_pitch, 0);
    var time_repeat = (alarm[4] / time_total) * room_speed;
    time_repeat = clamp(time_repeat, room_speed * 0.1, room_speed);
    alarm[5] = time_repeat;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" ename="obj_gizmo_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_sound_play(169, 0.3, 2, 0);

with (obj_barghest_pattern_button_parent)
{
    if (sprite_index != sprite_open)
    {
        sprite_index = sprite_opening;
        stay_open = 1;
    }
    
    button_allowed = 0;
    button_alpha = 0;
    button_fail = 1;
}

alarm[2] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (pattern_current &lt; pattern_steps)
{
    with (obj_barghest_pattern_button_parent)
    {
        if (button_number == other.pattern_array[other.pattern_current])
        {
            sprite_index = sprite_closing;
            var button_sound = asset_get_index("snd_barghest_pattern_eye_" + string(button_number));
            scr_sound_play(button_sound, 0.25, 2, 0);
            var current_graphic = instance_create(x, y + 20, obj_barghest_pattern_controlgraphic);
            
            if (instance_exists(obj_barghest_pattern_controlgraphic))
            {
                if (global.gamepad_connected == 1)
                {
                    current_graphic.sprite_index = spr_combat_controls_gamepad_big_symbols;
                    current_graphic.image_index = button_number - 1;
                    
                    if (global.storyline_array[107] &gt;= 3)
                    {
                        current_graphic.image_index = irandom_range(0, 3);
                        current_graphic.image_speed = 0.25;
                    }
                }
                else
                {
                    current_graphic.image_index = other.pattern_current;
                    
                    if (global.storyline_array[107] &gt;= 3)
                    {
                        current_graphic.image_index = irandom_range(0, 5);
                        current_graphic.image_speed = 0.25;
                    }
                }
            }
        }
    }
    
    pattern_current += 1;
    alarm[3] = pattern_reset_delay;
}
else
{
    with (obj_barghest_pattern_button_parent)
    {
        if (button_number != 0)
        {
            button_allowed = 1;
        }
        else
        {
            sprite_index = sprite_closing;
            stay_open = 0;
        }
    }
    
    game_started = 1;
    alarm[4] = room_speed * 10;
    alarm[5] = 1;
    audio_sound_gain(snd_music_shadows_bitter, audio_store[1], 250);
    pattern_current = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_barghest_combat_parent)
    color_target = 16777215;

if (instance_exists(obj_barghest_pattern_attack))
{
    with (obj_barghest_pattern_attack)
    {
        audio_stop_sound(snd_barghest_pattern_blast);
        instance_destroy();
    }
}

with (obj_barghest_pattern_button_parent)
{
    position_set = 0;
    position_step = 2;
    target_position = y - 200;
    direction = 90;
    speed = 6;
}

with (obj_barghest_pattern_base)
{
    position_set = 0;
    position_step = 2;
    target_position = y - 200;
    direction = 90;
    speed = 6;
}

obj_combat_parent.activate_game = 1;
global.cursor_active = 0;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(320, obj_view.y - 301, obj_barghest_pattern_base);
instance_create(320, obj_view.y - 283, obj_barghest_pattern_button_0);
instance_create(247, obj_view.y - 287, obj_barghest_pattern_button_1);
instance_create(289, obj_view.y - 263, obj_barghest_pattern_button_2);
instance_create(352, obj_view.y - 263, obj_barghest_pattern_button_3);
instance_create(393, obj_view.y - 287, obj_barghest_pattern_button_4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.gamepad_connected == 1)
{
    if (game_started == 1)
    {
        var correct_press = -1;
        
        switch (pattern_array[pattern_current])
        {
            case 1:
                if (global.a_key)
                    correct_press = 1;
                else if (global.b_key)
                    correct_press = 0;
                else if (global.x_key)
                    correct_press = 0;
                else if (global.y_key)
                    correct_press = 0;
                
                break;
            
            case 2:
                if (global.b_key)
                    correct_press = 1;
                else if (global.a_key)
                    correct_press = 0;
                else if (global.x_key)
                    correct_press = 0;
                else if (global.y_key)
                    correct_press = 0;
                
                break;
            
            case 3:
                if (global.x_key)
                    correct_press = 1;
                else if (global.a_key)
                    correct_press = 0;
                else if (global.b_key)
                    correct_press = 0;
                else if (global.y_key)
                    correct_press = 0;
                
                break;
            
            case 4:
                if (global.y_key)
                    correct_press = 1;
                else if (global.a_key)
                    correct_press = 0;
                else if (global.b_key)
                    correct_press = 0;
                else if (global.x_key)
                    correct_press = 0;
                
                break;
        }
        
        if (correct_press == 1)
        {
            with (obj_barghest_pattern_button_parent)
            {
                if (button_number == obj_game_parent.pattern_array[obj_game_parent.pattern_current])
                {
                    sprite_index = sprite_closing;
                    var button_sound = asset_get_index("snd_barghest_pattern_eye_" + string(button_number));
                    scr_sound_play(button_sound, 0.25, 2, 0);
                    
                    if (global.storyline_array[23] == 1)
                    {
                        global.enemy_hp_check -= 2;
                        scr_damage_target(2, 23, x, y);
                    }
                    else
                    {
                        global.enemy_hp_check -= 1;
                        scr_damage_target(1, 23, x, y);
                    }
                }
            }
            
            pattern_current += 1;
            
            if (pattern_current == pattern_steps)
            {
                alarm[4] = 0;
                alarm[5] = 0;
                alarm[2] = room_speed * 0.5;
                
                with (obj_barghest_pattern_button_parent)
                    button_allowed = 0;
                
                game_started = 0;
            }
        }
        else if (correct_press == 0)
        {
            scr_sound_play(169, 0.3, 2, 0);
            
            with (obj_barghest_pattern_button_parent)
            {
                if (sprite_index != sprite_open)
                {
                    sprite_index = sprite_opening;
                    stay_open = 1;
                }
                
                button_allowed = 0;
                button_alpha = 0;
                button_fail = 1;
            }
            
            alarm[4] = 0;
            alarm[5] = 0;
            alarm[2] = room_speed;
            game_started = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (display_text == 1)
{
    draw_sprite_ext(sprite_index, image_index, 320, obj_view.y + 40, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    
    if (alarm[0] &lt; 1)
    {
        image_alpha -= ((0.04 * obj_combat_parent.selected_diff) + 0.04);
        
        if (image_alpha &lt;= 0)
        {
            display_text = 0;
            alarm[1] = pattern_start_delay;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints />
</object>
