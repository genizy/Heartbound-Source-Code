<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_blocker_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>push_horizontal_flag = 0;
push_vertical_flag = 0;
push_speed = 2;
push_sound = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_lore))
{
    push_vertical = 0;
    push_horizontal = 0;
    
    with (obj_lore)
    {
        mask_index = spr_lore_mask;
        
        if (other.push_vertical_flag != 0)
        {
            if (place_meeting(x, ymove, other.id))
                other.push_vertical = yaxis;
        }
        
        if (other.push_horizontal_flag != 0)
        {
            if (place_meeting(xmove, y, other.id))
                other.push_horizontal = xaxis;
        }
        
        mask_index = sprite_index;
    }
    
    if (push_vertical != 0)
    {
        global.player_frozen = 1;
        vspeed = push_vertical * push_speed;
    }
    
    if (push_horizontal != 0)
    {
        global.player_frozen = 1;
        hspeed = push_horizontal * push_speed;
    }
}

if (vspeed != 0)
{
    if (place_meeting(x, y + vspeed, obj_blockstopper))
    {
        vspeed = 0;
        y -= vspeed;
        global.player_frozen = 0;
    }
}

if (hspeed != 0)
{
    if (place_meeting(x + hspeed, y, obj_blockstopper))
    {
        hspeed = 0;
        x -= hspeed;
        global.player_frozen = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints />
</object>
