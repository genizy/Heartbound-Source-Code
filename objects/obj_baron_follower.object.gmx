<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_baron_right_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_follower_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
collision_mask = 291;
image_speed = 0.1;
anim_direction = "right";
anim_type = "stand";
anim_active = 0;
swap_type = 0;
follow_x = x;
follow_y = y;
target_x = x;
target_x = y;

if (instance_exists(obj_player_parent))
{
    follow_x = obj_player_parent.x;
    follow_y = obj_player_parent.y;
    target_x = obj_player_parent.x;
    target_x = obj_player_parent.y;
}

follow_path = ds_queue_create();
follow_delay = 75;
alarm[0] = room_speed * 5;
x = follow_x;
y = follow_y;
var follow_direction = global.player_direction;

switch (follow_direction)
{
    case 1:
        anim_direction = "right";
        break;
    
    case 2:
        anim_direction = "down";
        break;
    
    case 3:
        anim_direction = "left";
        break;
    
    case 4:
        anim_direction = "up";
        break;
}

sprite_index = asset_get_index("spr_baron_" + anim_direction + "_stand");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (swap_type)
{
    case 1:
        instance_change(obj_kitchen_baron_food, true);
        break;
    
    case 2:
        instance_change(obj_livingroom_baron_bed, true);
        break;
    
    case 3:
        instance_change(obj_hallway_baron_bed, true);
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_player_parent))
{
    anim_active = 0;
    target_x = obj_player_parent.x;
    target_y = obj_player_parent.y - 1;
    
    if (follow_x != target_x || follow_y != target_y)
    {
        ds_queue_enqueue(follow_path, target_x);
        ds_queue_enqueue(follow_path, target_y);
        ds_queue_enqueue(follow_path, global.player_direction);
        follow_x = target_x;
        follow_y = target_y;
    }
    
    if (ds_queue_size(follow_path) &gt; follow_delay)
    {
        x = ds_queue_dequeue(follow_path);
        y = ds_queue_dequeue(follow_path);
        var follow_direction = ds_queue_dequeue(follow_path);
        
        switch (follow_direction)
        {
            case 1:
                anim_direction = "right";
                break;
            
            case 2:
                anim_direction = "down";
                break;
            
            case 3:
                anim_direction = "left";
                break;
            
            case 4:
                anim_direction = "up";
                break;
        }
        
        anim_active = 1;
    }
    
    if (anim_active == 0)
    {
        if (alarm[0] != -1)
        {
            anim_type = "stand";
            image_speed = 0.1;
        }
        else
        {
            anim_type = "sit";
            
            if (anim_direction != "up")
                image_speed = 0.1;
        }
    }
    else
    {
        anim_type = "walk";
        image_speed = 0.2;
        alarm[0] = room_speed * 5;
    }
    
    sprite_index = asset_get_index("spr_baron_" + anim_direction + "_" + anim_type);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_queue_destroy(follow_path);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" ename="obj_gizmo_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.storyline_array[22] == 0)
{
    if (room == home_kitchen)
    {
        swap_type = 1;
        alarm[1] = room_speed * 0.25;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints />
</object>
